version: 2.1

orbs:
  sonarcloud: extendaretail/sonarcloud@0.0.2

jobs:
  build:
    docker:
      - image: 'circleci/openjdk:11-jdk'    
    working_directory: /tmp/workspace
    steps:
      # get source from git
      - checkout
      
      # Download and cache dependencies
      - restore_cache:
          keys:
            - reactive-spring-forex-trade-{{ checksum "pom.xml" }}
            - reactive-spring-forex-trade-          
      
      - run: mvn dependency:go-offline

      - save_cache:
          key: reactive-spring-forex-trade-{{ checksum "pom.xml" }}      
          paths:
            - ~/.m2

      # Compile
      - run:
          name: Compile
          command: mvn compile -P no-test

      - persist_to_workspace:
          root: .
          paths:
            - ./*

  unit-test:
    docker:
      - image: 'circleci/openjdk:11-jdk'    
    working_directory: /tmp/workspace
    steps:
      # Attach workspace carry forward from previous job
      - attach_workspace:
          at: /tmp/workspace    
      
      # Restore dependency cache
      - restore_cache:
          keys:
            - reactive-spring-forex-trade-{{ checksum "pom.xml" }}
            - reactive-spring-forex-trade-          

      # Run unit test
      - run:
          name: Run Unit Tests
          command: mvn test -P unit-test

      - persist_to_workspace:
          root: .
          paths:
            - ./*

  analyze:
    docker:
      - image: 'circleci/openjdk:11-jdk'   
    working_directory: /tmp/workspace      
    steps:
      # Attach workspace carry forward from previous job
      - attach_workspace:
          at: /tmp/workspace
          
      # Restore cache dependencies
      - restore_cache:
          keys:
            - reactive-spring-forex-trade-{{ checksum "pom.xml" }}
            - reactive-spring-forex-trade-             
      
      # Submit to Sonar for analysis
      - run:
          name: Analyze
          command: > 
            mvn verify sonar:sonar -P no-test -DskipITs
            
            mkdir .scannerwork
            
            cp target/sonar/report-task.txt .scannerwork/report-task.txt
      
      # Wait for analysis result. Fail of quality gate fail
      - sonarcloud/check_quality_gate      

  integration-test:
    docker:
      - image: 'circleci/openjdk:11-jdk'    
    working_directory: /tmp/workspace
    steps:
      # Attach workspace carry forward from previous job
      - attach_workspace:
          at: /tmp/workspace    
      
      # Restore dependency cache
      - restore_cache:
          keys:
            - reactive-spring-forex-trade-{{ checksum "pom.xml" }}
            - reactive-spring-forex-trade-          

      # Run integration test
      - run:
          name: Run Integartion Tests
          command: mvn test -P integartion-test

      - persist_to_workspace:
          root: .
          paths:
            - ./*

  e2e-test:
    docker:
      - image: 'circleci/openjdk:11-jdk'    
    working_directory: /tmp/workspace
    steps:
      # Attach workspace carry forward from previous job
      - attach_workspace:
          at: /tmp/workspace    
      
      # Restore dependency cache
      - restore_cache:
          keys:
            - reactive-spring-forex-trade-{{ checksum "pom.xml" }}
            - reactive-spring-forex-trade-          

      # Run integration test
      - run:
          name: Run End-to-end Tests
          command: mvn verify -P e2e-test

      - persist_to_workspace:
          root: .
          paths:
            - ./*
      
workflows:
  main:
    jobs:
      - build:
          context: SonarCloud
      
      - unit-test:
          requires:
            - build
          
      - analyze:
          context: SonarCloud
          requires:
            - unit-test
            
      - integration-test:
          requires:
            - analyze
      
      - e2e-test:
          requires:
            - analyze
          

