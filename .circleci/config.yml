version: 2.1

orbs:
  sonarcloud: extendaretail/sonarcloud@0.0.2
  sonarsource: sonarsource/sonarcloud@1.0.0

jobs:
  build:
    docker:
      - image: 'circleci/openjdk:11-jdk'    
#     working_directory: ~/reactive-spring-forex-trade
    steps:
      # get source from git
      - checkout
      
      # Download and cache dependencies
      - restore_cache:
          keys:
            - reactive-spring-forex-trade-{{ checksum "pom.xml" }}
            - reactive-spring-forex-trade-          
      
      - run: mvn dependency:go-offline

      - save_cache:
          key: reactive-spring-forex-trade-{{ checksum "pom.xml" }}      
          paths:
            - ~/.m2

      # Compile Unti Test
      - run:
          name: Compile
          command: mvn compile -P no-test

#       - run:
#           name: Run Unit Tests
#           command: mvn test -P unit-test

      - persist_to_workspace:
          root: .
          paths:
            - *

  analyze:
    docker:
      - image: 'circleci/openjdk:11-jdk'    
    steps:
      - attach_workspace
          at: .
          
      - run:
          name: Analyze
          command: > 
            mvn verify sonar:sonar -P no-test
            
            mkdir .scannerwork
            
            cp target/sonar/report-task.txt .scannerwork/report-task.txt
            
#       - persist_to_workspace:
#           paths:
#             - .scannerwork/report-task.txt
#           root: .
      
      - sonarcloud/check_quality_gate      


#   test:
#     docker:
#       - image: 'circleci/openjdk:11-jdk'
#     steps:
#       # Download and cache dependencies
#       - restore_cache:
#           keys:
#             - reactive-spring-forex-trade-{{ checksum "pom.xml" }}    
    
#       - run:
#           name: Run Integratin Test
#           command: mvn test -P integration-test
          
#       - run:
#           name: Run End-to-End Test
#           command: mvn verify -P e2e-test
      
workflows:
  main:
    jobs:
      - build:
          context: SonarCloud
          
      - analyze:
          context: SonarCloud
          requires:
            - build
          
#       - sonarcloud/check_quality_gate:
#           context: SonarCloud
#           requires:
#             - build
            
#       - test:
#           requires:
#             - sonarcloud/check_quality_gate
